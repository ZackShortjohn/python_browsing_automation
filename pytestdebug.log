versions pytest-8.3.3, python-3.13.0.final.0
invocation_dir=C:\Users\Zach\Desktop\qa challenge
cwd=C:\Users\Zach\Desktop\qa challenge
args=('tests/test_basic_interaction.py', '--debug')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x0000024166282270>
    pytest_plugin_registered [hook]
        plugin: <Session  exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        plugin_name: session
        manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x0000024166282270>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x0000024167C66510>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x0000024167DD63C0>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
    early skip of rewriting module: rlcompleter [assertion]
    early skip of rewriting module: readline [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
          plugin_name: 2479908533792
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x0000024166282270>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\mark\\__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pytest_asyncio\\plugin.py'>
          plugin_name: asyncio
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=9 _state='suspended' tmpfile=<EncodedFile name='<tempfile._TemporaryFileWrapper object at 0x0000024167D94050>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=11 _state='suspended' tmpfile=<EncodedFile name='<tempfile._TemporaryFileWrapper object at 0x0000024167CC1F90>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=7 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' from 'C:\\Users\\Zach\\Desktop\\qa challenge\\conftest.py'>
          plugin_name: C:\Users\Zach\Desktop\qa challenge\conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x0000024167C66510>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x0000024167DD63C0>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x0000024168795D30>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x00000241687963C0>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
          plugin_name: 2479908533792
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x0000024166282270>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\mark\\__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pytest_asyncio\\plugin.py'>
          plugin_name: asyncio
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=9 _state='suspended' tmpfile=<EncodedFile name='<tempfile._TemporaryFileWrapper object at 0x0000024167D94050>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=11 _state='suspended' tmpfile=<EncodedFile name='<tempfile._TemporaryFileWrapper object at 0x0000024167CC1F90>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=7 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' from 'C:\\Users\\Zach\\Desktop\\qa challenge\\conftest.py'>
          plugin_name: C:\Users\Zach\Desktop\qa challenge\conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x0000024167C66510>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x0000024167DD63C0>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x0000024168795D30>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x00000241687963C0>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x0000024168796BA0>
          plugin_name: funcmanage
          manager: <_pytest.config.PytestPluginManager object at 0x0000024166113620>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x0000024166282270>
          start_path: C:\Users\Zach\Desktop\qa challenge
          startdir: C:\Users\Zach\Desktop\qa challenge
      early skip of rewriting module: importlib.metadata._adapters [assertion]
      early skip of rewriting module: email.message [assertion]
      early skip of rewriting module: quopri [assertion]
      early skip of rewriting module: email.utils [assertion]
      early skip of rewriting module: email._parseaddr [assertion]
      early skip of rewriting module: email.errors [assertion]
      early skip of rewriting module: email._policybase [assertion]
      early skip of rewriting module: email.header [assertion]
      early skip of rewriting module: email.quoprimime [assertion]
      early skip of rewriting module: email.base64mime [assertion]
      early skip of rewriting module: email.charset [assertion]
      early skip of rewriting module: email.encoders [assertion]
      early skip of rewriting module: email._encoded_words [assertion]
      early skip of rewriting module: email.iterators [assertion]
      early skip of rewriting module: importlib.metadata._text [assertion]
      early skip of rewriting module: email.parser [assertion]
      early skip of rewriting module: email.feedparser [assertion]
      finish pytest_report_header --> [['asyncio: mode=Mode.STRICT, default_loop_scope=None'], ['rootdir: C:\\Users\\Zach\\Desktop\\qa challenge', 'plugins: asyncio-0.24.0'], ['using: pytest-8.3.3', 'registered third-party plugins:', '  pytest-asyncio-0.24.0 at C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pytest_asyncio\\plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['tests/test_basic_interaction.py'] [collection]
        pytest_collectstart [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument CollectionArgument(path=WindowsPath('C:/Users/Zach/Desktop/qa challenge/tests/test_basic_interaction.py'), parts=[], module_name=None) [collection]
            pytest_collect_directory [hook]
                path: C:\Users\Zach\Desktop\qa challenge
                parent: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> <Dir qa challenge> [hook]
            pytest_collectstart [hook]
                collector: <Dir qa challenge>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir qa challenge>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000024166282270>
                  collection_path: C:\Users\Zach\Desktop\qa challenge\.pytest_cache
                  path: C:\Users\Zach\Desktop\qa challenge\.pytest_cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000024166282270>
                  collection_path: C:\Users\Zach\Desktop\qa challenge\__pycache__
                  path: C:\Users\Zach\Desktop\qa challenge\__pycache__
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000024166282270>
                  collection_path: C:\Users\Zach\Desktop\qa challenge\conftest.py
                  path: C:\Users\Zach\Desktop\qa challenge\conftest.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir qa challenge>
                  file_path: C:\Users\Zach\Desktop\qa challenge\conftest.py
                  path: C:\Users\Zach\Desktop\qa challenge\conftest.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000024166282270>
                  collection_path: C:\Users\Zach\Desktop\qa challenge\pytestdebug.log
                  path: C:\Users\Zach\Desktop\qa challenge\pytestdebug.log
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir qa challenge>
                  file_path: C:\Users\Zach\Desktop\qa challenge\pytestdebug.log
                  path: C:\Users\Zach\Desktop\qa challenge\pytestdebug.log
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000024166282270>
                  collection_path: C:\Users\Zach\Desktop\qa challenge\screenshot_after_login.png
                  path: C:\Users\Zach\Desktop\qa challenge\screenshot_after_login.png
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir qa challenge>
                  file_path: C:\Users\Zach\Desktop\qa challenge\screenshot_after_login.png
                  path: C:\Users\Zach\Desktop\qa challenge\screenshot_after_login.png
              finish pytest_collect_file --> [] [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Zach\Desktop\qa challenge\tests
                  parent: <Dir qa challenge>
              finish pytest_collect_directory --> <Dir tests> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000024166282270>
                  collection_path: C:\Users\Zach\Desktop\qa challenge\utils
                  path: C:\Users\Zach\Desktop\qa challenge\utils
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Zach\Desktop\qa challenge\utils
                  parent: <Dir qa challenge>
              finish pytest_collect_directory --> <Dir utils> [hook]
            finish pytest_make_collect_report --> <CollectReport '.' lenresult=2 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Dir tests>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir tests>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000024166282270>
                  collection_path: C:\Users\Zach\Desktop\qa challenge\tests\__pycache__
                  path: C:\Users\Zach\Desktop\qa challenge\tests\__pycache__
              finish pytest_ignore_collect --> True [hook]
              pytest_collect_file [hook]
                  parent: <Dir tests>
                  file_path: C:\Users\Zach\Desktop\qa challenge\tests\test_basic_interaction.py
                  path: C:\Users\Zach\Desktop\qa challenge\tests\test_basic_interaction.py
                pytest_pycollect_makemodule [hook]
                    parent: <Dir tests>
                    module_path: C:\Users\Zach\Desktop\qa challenge\tests\test_basic_interaction.py
                    path: C:\Users\Zach\Desktop\qa challenge\tests\test_basic_interaction.py
                finish pytest_pycollect_makemodule --> <Module test_basic_interaction.py> [hook]
              finish pytest_collect_file --> [<Module test_basic_interaction.py>] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000024166282270>
                  collection_path: C:\Users\Zach\Desktop\qa challenge\tests\test_file_interaction.py
                  path: C:\Users\Zach\Desktop\qa challenge\tests\test_file_interaction.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir tests>
                  file_path: C:\Users\Zach\Desktop\qa challenge\tests\test_file_interaction.py
                  path: C:\Users\Zach\Desktop\qa challenge\tests\test_file_interaction.py
                pytest_pycollect_makemodule [hook]
                    parent: <Dir tests>
                    module_path: C:\Users\Zach\Desktop\qa challenge\tests\test_file_interaction.py
                    path: C:\Users\Zach\Desktop\qa challenge\tests\test_file_interaction.py
                finish pytest_pycollect_makemodule --> <Module test_file_interaction.py> [hook]
              finish pytest_collect_file --> [<Module test_file_interaction.py>] [hook]
            finish pytest_make_collect_report --> <CollectReport 'tests' lenresult=2 outcome='passed'> [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module test_basic_interaction.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_basic_interaction.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_basic_interaction.py>
      find_module called for: test_basic_interaction [assertion]
      matched test file (was specified on cmdline): 'C:\\Users\\Zach\\Desktop\\qa challenge\\tests\\test_basic_interaction.py' [assertion]
      found cached rewritten pyc for C:\Users\Zach\Desktop\qa challenge\tests\test_basic_interaction.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_basic_interaction.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_basic_interaction.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from 'C:\\Users\\Zach\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_basic_interaction.py>
            name: time
            obj: <module 'time' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_basic_interaction.py>
            name: test_login_via_ui
            obj: <function test_login_via_ui at 0x00000241688E71A0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x00000241688B1400>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_login_via_ui>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_basic_interaction.py>
            name: test_chat_interaction
            obj: <function test_chat_interaction at 0x00000241688E7240>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x0000024168872E90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_chat_interaction>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_basic_interaction.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x00000241688E6CA0>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_basic_interaction.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_login_via_ui> [collection]
      pytest_itemcollected [hook]
          item: <Function test_login_via_ui>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_chat_interaction> [collection]
      pytest_itemcollected [hook]
          item: <Function test_chat_interaction>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_basic_interaction.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x0000024166282270>
          items: [<Function test_login_via_ui>, <Function test_chat_interaction>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x0000024166282270>
            items: [<Function test_login_via_ui>, <Function test_chat_interaction>]
            start_path: C:\Users\Zach\Desktop\qa challenge
            startdir: C:\Users\Zach\Desktop\qa challenge
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=2>
      pytest_runtest_protocol [hook]
          item: <Function test_login_via_ui>
          nextitem: <Function test_chat_interaction>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_basic_interaction.py::test_login_via_ui
            location: ('tests\\test_basic_interaction.py', 3, 'test_login_via_ui')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_login_via_ui>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_login_via_ui>>
          finish pytest_fixture_setup --> <asyncio.windows_events.WindowsProactorEventLoopPolicy object at 0x00000241688B17F0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='browser_context' scope='session' baseid=''>
              request: <SubRequest 'browser_context' for <Function test_login_via_ui>>
          finish pytest_fixture_setup --> <BrowserContext browser=<Browser type=<BrowserType name=chromium executable_path=C:\Users\Zach\AppData\Local\ms-playwright\chromium-1140\chrome-win\chrome.exe> version=130.0.6723.31>> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_login_via_ui>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_basic_interaction.py::test_login_via_ui' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_basic_interaction.py::test_login_via_ui' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_basic_interaction.py::test_login_via_ui' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x0000024166282270>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_login_via_ui>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_login_via_ui>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_login_via_ui>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_basic_interaction.py::test_login_via_ui' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_basic_interaction.py::test_login_via_ui' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_basic_interaction.py::test_login_via_ui' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x0000024166282270>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_login_via_ui>
            nextitem: <Function test_chat_interaction>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_login_via_ui>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_basic_interaction.py::test_login_via_ui' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_basic_interaction.py::test_login_via_ui' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_basic_interaction.py::test_login_via_ui' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x0000024166282270>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_basic_interaction.py::test_login_via_ui
            location: ('tests\\test_basic_interaction.py', 3, 'test_login_via_ui')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_chat_interaction>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: tests/test_basic_interaction.py::test_chat_interaction
            location: ('tests\\test_basic_interaction.py', 16, 'test_chat_interaction')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_chat_interaction>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_chat_interaction>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_basic_interaction.py::test_chat_interaction' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_basic_interaction.py::test_chat_interaction' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_basic_interaction.py::test_chat_interaction' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x0000024166282270>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_chat_interaction>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_chat_interaction>
        pytest_runtest_makereport [hook]
            item: <Function test_chat_interaction>
            call: <CallInfo when='call' excinfo=<ExceptionInfo Error('Locator.click: Error: strict mode violation: locator("//a[@id=\'auth-link\']//span[contains(text(), \'Log out\'...("Log out").nth(1)\n\nCall log:\nwaiting for locator("//a[@id=\'auth-link\']//span[contains(text(), \'Log out\')]")\n') tblen=42>>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_basic_interaction.py::test_chat_interaction' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_basic_interaction.py::test_chat_interaction' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_basic_interaction.py::test_chat_interaction' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x0000024166282270>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_chat_interaction>
            call: <CallInfo when='call' excinfo=<ExceptionInfo Error('Locator.click: Error: strict mode violation: locator("//a[@id=\'auth-link\']//span[contains(text(), \'Log out\'...("Log out").nth(1)\n\nCall log:\nwaiting for locator("//a[@id=\'auth-link\']//span[contains(text(), \'Log out\')]")\n') tblen=42>>
            report: <TestReport 'tests/test_basic_interaction.py::test_chat_interaction' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_chat_interaction>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_context' scope='session' baseid=''>
              request: <SubRequest 'browser_context' for <Function test_login_via_ui>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_login_via_ui>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_chat_interaction>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_basic_interaction.py::test_chat_interaction' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_basic_interaction.py::test_chat_interaction' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_basic_interaction.py::test_chat_interaction' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x0000024166282270>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_basic_interaction.py::test_chat_interaction
            location: ('tests\\test_basic_interaction.py', 16, 'test_chat_interaction')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session  exitstatus=<ExitCode.TESTS_FAILED: 1> testsfailed=1 testscollected=2>
        exitstatus: 1
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x0000024168795D30>
          exitstatus: 1
          config: <_pytest.config.Config object at 0x0000024166282270>
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
        pytest_report_teststatus [hook]
            report: <TestReport 'tests/test_basic_interaction.py::test_chat_interaction' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x0000024166282270>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x0000024166282270>
    finish pytest_unconfigure --> [] [hook]
